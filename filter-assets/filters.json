{
    "bw": {
        "name": "__bw",
        "type": "FeColorMatrixSaturate",
        "filterSpec": {
            "in": "SourceGraphic"
        },
        "filterEffects": {
            "values": 0.3,
            "type": "saturate"
        }
    },
    "matrix": {

    },
    "nin": {

    },
    "carlton": {

    }
}

// Pseudo-code
If there's a filterSpec, create that.
Then populate its values using json.Unmarshal
Then create a var of type "type" (e.g., FeColorMatrixSaturate).
Then populate its values using json.Unmarshal
Then call to its type method on canvas.

Then to layer these, you could...

If the length of selected > 1,
You could as you add them,
Keep a record of "previous Result",
then on the next one apply that result.
    (As you add filterSpecs and then feComposite elements)

THen on the last one, use SourceGraphic as the "in" or "in2" (whichever that is)

Ideally we'll be able to get rid of MY svgStructs file because we'll just use types from SVGo